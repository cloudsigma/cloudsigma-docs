HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8

{
    "allowed_detail_http_methods": [
        "get",
        "put",
        "delete"
    ],
    "allowed_list_http_methods": [
        "get",
        "put",
        "delete",
        "post"
    ],
    "default_format": "application/json",
    "default_limit": 20,
    "fields": {
        "dhcp_range_from": {
            "default": null,
            "help_text": "Unicode string data. Ex: \"Hello World\"",
            "readonly": false,
            "required": false,
            "type": "string"
        },
        "dhcp_range_to": {
            "default": null,
            "help_text": "Unicode string data. Ex: \"Hello World\"",
            "readonly": false,
            "required": false,
            "type": "string"
        },
        "dhcp_vlan_gateway": {
            "default": null,
            "help_text": "Unicode string data. Ex: \"Hello World\"",
            "readonly": false,
            "required": false,
            "type": "string"
        },
        "iface": {
            "default": null,
            "help_text": "Unicode string data. Ex: \"Hello World\"",
            "readonly": false,
            "required": false,
            "type": "string"
        },
        "internet_protocol": {
            "choices": [
                "ipv4",
                "ipv6",
                "both"
            ],
            "default": null,
            "help_text": "Unicode string data. Ex: \"Hello World\"",
            "readonly": false,
            "required": true,
            "type": "string"
        },
        "ip_aliases": {
            "default": [],
            "help_text": "A list of data. Ex: ['abc', 26.73, 8]",
            "readonly": false,
            "required": false,
            "type": "list"
        },
        "ipv4_address_gateway": {
            "default": null,
            "help_text": "Unicode string data. Ex: \"Hello World\"",
            "readonly": false,
            "required": false,
            "type": "string"
        },
        "ipv4_dhcp_enabled": {
            "default": null,
            "help_text": "Boolean data. Ex: True",
            "readonly": false,
            "required": false,
            "type": "boolean"
        },
        "ipv6_address_gateway": {
            "default": null,
            "help_text": "Unicode string data. Ex: \"Hello World\"",
            "readonly": false,
            "required": false,
            "type": "string"
        },
        "ipv6_router_advertirser_enabled": {
            "default": null,
            "help_text": "Boolean data. Ex: True",
            "readonly": false,
            "required": false,
            "type": "boolean"
        },
        "name": {
            "default": null,
            "help_text": "Unicode string data. Ex: \"Hello World\"",
            "readonly": false,
            "required": false,
            "type": "string"
        },
        "order": {
            "default": null,
            "help_text": "Integer data. Ex: 2673",
            "readonly": false,
            "required": true,
            "type": "integer"
        },
        "resource_uri": {
            "default": "No default provided.",
            "help_text": "Unicode string data. Ex: \"Hello World\"",
            "readonly": true,
            "required": true,
            "type": "string"
        },
        "uuid": {
            "default": null,
            "help_text": "UUID of the virtual router LAN interface",
            "readonly": true,
            "required": true,
            "type": "string"
        },
        "virtual_router": {
            "default": null,
            "help_text": "Unicode string data. Ex: \"Hello World\"",
            "readonly": false,
            "required": true,
            "type": "string"
        },
        "vlan": {
            "default": null,
            "help_text": "A single related resource. Can be either a URI or set of nested resource data.",
            "readonly": false,
            "required": true,
            "type": "related"
        }
    },
    "filtering": {
        "name": "exact",
        "name__contains": "exact",
        "tag": "exact",
        "uuid": "exact"
    },
    "ordering": [
        "uuid",
        "name"
    ]
}
